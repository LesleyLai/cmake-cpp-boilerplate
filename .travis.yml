language: cpp
sudo: require

os: linux
dist: trusty

matrix:
  include:
  - os: linux
    compiler: gcc
    name: GCC 8 with Unit Test
    env: CC="/usr/bin/gcc-8" CXX="/usr/bin/g++-8" CMAKE_OPTIONS="-DBP_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - g++-8
    before_script:
          - sudo ln -s /usr/bin/gcc-8 /usr/local/bin/gcc
          - sudo ln -s /usr/bin/g++-8 /usr/local/bin/g++


  - os: linux
    compiler: clang
    name: Clang 6 with Unit Test
    env: CC="/usr/bin/clang-6.0" CXX="/usr/bin/clang++-6.0" CMAKE_OPTIONS="-DBP_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - g++-8
          - clang-6.0
    before_script:
      - sudo ln -s /usr/bin/clang-6.0 /usr/local/bin/clang
      - sudo ln -s /usr/bin/clang++-6.0 /usr/local/bin/clang++


  # Coverage
  - os: linux
    compiler: gcc
    name: Coverage
    env: BUILD_ONLY=1 CC="/usr/bin/gcc-7" CXX="/usr/bin/g++-7" GCOV="/usr/bin/gcov-7" CMAKE_OPTIONS=" -DCMAKE_BUILD_TYPE=Debug -DBP_BUILD_TESTS=ON -DBP_BUILD_TESTS_COVERAGE=ON"  CODECOV_TOKEN="bfb807d5-6b2e-4d8d-8dae-0dcabf3c5c68"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - g++-8
          - g++-7
          - clang-6.0
    before_script:
      - sudo ln -s /usr/bin/gcc-7 /usr/local/bin/gcc
      - sudo ln -s /usr/bin/g++-7 /usr/local/bin/g++
      - sudo ln -s /usr/bin/gcov-7 /usr/local/bin/gcov
       # Install lcov 1.13
      - wget http://downloads.sourceforge.net/ltp/lcov-1.13.tar.gz
      - tar -xvf lcov-1.13.tar.gz
      - cd lcov-1.13 && sudo make install
      - cd ..
    after_success:
      - make coverage
      - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";

  # Clang-tidy
  - os: linux
    compiler: clang
    name: clang-tidy
    env: BUILD_ONLY=1 CC="/usr/bin/clang-6.0" CXX="/usr/bin/clang++-6.0" CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release -DBP_ENABLE_CLANG_TIDY=On"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
        packages:
          - g++-8
          - clang-6.0
          - clang-tidy-6.0
    before_script:
      - sudo ln -s /usr/bin/clang-6.0 /usr/local/bin/clang
      - sudo ln -s /usr/bin/clang++-6.0 /usr/local/bin/clang++


  #
  # Git Check
  #
  - os: linux
    name: git-check
    script:
      - |
        if [[ -n $(git diff --check HEAD^) ]]; then
          echo "You must remove whitespace before submitting a pull request"
          echo ""
          git diff --check HEAD^
          exit -1
        fi

script:
  - sudo pip install conan
  - mkdir build && cd build
  - cmake .. $CMAKE_OPTIONS
  - make
  - if [ "${BUILD_ONLY}" != "1" ]; then ctest --verbose; fi
