language: cpp
sudo: require

linux: &linux
  os: linux
  dist: bionic
  language: python
  python: "3.8"
  install:
    - pip install conan cmake
  script:
    - mkdir build && cd build
    - cmake .. $CMAKE_OPTIONS
    - make
    - if [ "${BUILD_ONLY}" != "1" ]; then ctest --verbose; fi

matrix:
  include:
    - <<: *linux
      compiler: gcc
      name: GCC 8 with Unit Test
      env: CC="/usr/bin/gcc-8" CXX="/usr/bin/g++-8" CMAKE_OPTIONS="-DBP_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      before_script:
        - sudo ln -s /usr/bin/gcc-8 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-8 /usr/local/bin/g++


    - <<: *linux
      compiler: clang
      name: Clang 6 with Unit Test
      env: CC="/usr/bin/clang-6.0" CXX="/usr/bin/clang++-6.0" CMAKE_OPTIONS="-DBP_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - clang-6.0
      before_script:
        - sudo ln -s /usr/bin/clang-6.0 /usr/local/bin/clang
        - sudo ln -s /usr/bin/clang++-6.0 /usr/local/bin/clang++


    # Coverage
    - <<: *linux
      compiler: gcc
      name: Coverage
      env: BUILD_ONLY=1 CC="/usr/bin/gcc-7" CXX="/usr/bin/g++-7" GCOV="/usr/bin/gcov-7" CMAKE_OPTIONS=" -DCMAKE_BUILD_TYPE=Debug -DBP_BUILD_TESTS=ON -DBP_BUILD_TESTS_COVERAGE=ON"  CODECOV_TOKEN="fdb32228-ad06-4bae-92f9-10c03873cb85"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
            - g++-7
            - clang-6.0
      before_script:
        - sudo ln -s /usr/bin/gcc-7 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-7 /usr/local/bin/g++
        - sudo ln -s /usr/bin/gcov-7 /usr/local/bin/gcov
        # Install lcov 1.13
        - wget http://downloads.sourceforge.net/ltp/lcov-1.13.tar.gz
        - tar -xvf lcov-1.13.tar.gz
        - cd lcov-1.13 && sudo make install
        - cd ..
      after_success:
        - make coverage
        - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";

    #
    # Git Check
    #
    - os: linux
      name: git-check
      script:
        - |
          if [[ -n $(git diff --check HEAD^) ]]; then
            echo "You must remove whitespace before submitting a pull request"
            echo ""
            git diff --check HEAD^
            exit -1
          fi