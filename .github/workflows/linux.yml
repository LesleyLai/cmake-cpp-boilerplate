name: GCC-10 Linux

on: [ push ]

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - cxx: g++-10
            build_type: Debug
            std: 20
            os: ubuntu-20.04
            install: sudo apt install g++-10
          - cxx: g++-10
            build_type: Release
            std: 20
            os: ubuntu-20.04
            install: sudo apt install g++-10
          - cxx: clang++-11
            build_type: Debug
            std: 20
            cxxflags: -stdlib=libc++
            os: ubuntu-20.04
            install: sudo apt install libc++-11-dev libc++abi-11-dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
          key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('cmake/Conan.cmake') }}

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install cmake
          cmake -E make_directory ${{runner.workspace}}/build

      - name: Install conan
        shell: bash
        run: |
          python3 -m pip install conan

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CXX: ${{matrix.cxx}}
        run: |
          source ~/.profile
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
                -DCMAKE_CXX_STANDARD=${{matrix.std}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C $BUILD_TYPE
